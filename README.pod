=pod

=head1 Intern

Intern is a framework that does whatever I don't want to do. It's supposed to be used in iOS and mac projects to support development.

I will be periodically posting things about intern on my "blog.":http://yetanotherdevelopersblog.blogspot.com/

=head2 License

Intern has BSD license, so that you can do anything you want with it, even using on commercial applications.

The frameworks I use on Intern (including OCMock and GHUnit) both have their own licenses.

=head2 Targets

Intern has the following targets:

=over

=item B<Intern:> 

It's the main framework. It should be usable in both Mac OS X and iOS applications, so this ideally target will never depend on any file that is platform dependent.

=item B<InternIOS:> 

iOS platform dependent files. At this moment, including references to Core Data and UIKit.

=item B<InternIOSTest:> 

GHUnit based files that should be used as a lib for testing iOS application. 

=item B<UnitTests:> 

Intern GHUnit based unit tests.

=back


=head2 Building

To build intern, just do:
C<make clean && make && make test>

=head2 Using

Releases will be published on github as downloadable files. Each release will be published as a zip file with the following contents:

=over

=item B<InternIOS:> 

A folder containing both the header files and libraries built for both the simulator and phone version of intern.

=item B<InternIOSTest:> 

A folder containing the headers and the library of InternIOSTest built for the simulator.

=item B<*.lproj:> 

Intern localization files, this should be copied to your project localization bundles. All Intern localization are done in the table Intern.

=back

=head2 Contributing

If you want to contribute, you're welcome to do so. But I have a few requirements to accept your contribution: 

=over

1. The code you do must have automatic tests wherever possible. 

2.  It should build successfully from the command line (see building).

=back

Failure to comply to this will result on me not accepting your code (I'll try to post a comment though whenever I don't). 
If you don't want to do it, I won't be mad if you clone to your own repository and commit on it using your own rules.

You can also contribute with suggestions, but I won't make any promises I'll implement them.

=cut